//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.03.24 at 10:48:29 AM ICT 
//


package fbref.jaxb;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for miscellaneous-statsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="miscellaneous-statsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="cards_yellow_red" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="fouls" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="fouled" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="offsides" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="crosses" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="tackles_won" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="interceptions" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="pens_won" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="pens_conceded" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="own_goals" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribbles_completed" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribbles" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribbles_completed_pct" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *         &lt;element name="players_dribbled_past" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="nutmegs" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribble_tackles" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribbles_vs" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *         &lt;element name="dribble_tackles_pct" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *         &lt;element name="dribbled_past" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "miscellaneous-statsType", propOrder = {
    "cardsYellowRed",
    "fouls",
    "fouled",
    "offsides",
    "crosses",
    "tacklesWon",
    "interceptions",
    "pensWon",
    "pensConceded",
    "ownGoals",
    "dribblesCompleted",
    "dribbles",
    "dribblesCompletedPct",
    "playersDribbledPast",
    "nutmegs",
    "dribbleTackles",
    "dribblesVs",
    "dribbleTacklesPct",
    "dribbledPast"
})
public class MiscellaneousStatsType {

    @XmlElement(name = "cards_yellow_red", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger cardsYellowRed;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger fouls;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger fouled;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger offsides;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger crosses;
    @XmlElement(name = "tackles_won", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger tacklesWon;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger interceptions;
    @XmlElement(name = "pens_won", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger pensWon;
    @XmlElement(name = "pens_conceded", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger pensConceded;
    @XmlElement(name = "own_goals", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger ownGoals;
    @XmlElement(name = "dribbles_completed", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger dribblesCompleted;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger dribbles;
    @XmlElement(name = "dribbles_completed_pct", required = true, defaultValue = "0")
    protected BigDecimal dribblesCompletedPct;
    @XmlElement(name = "players_dribbled_past", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger playersDribbledPast;
    @XmlElement(required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger nutmegs;
    @XmlElement(name = "dribble_tackles", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger dribbleTackles;
    @XmlElement(name = "dribbles_vs", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger dribblesVs;
    @XmlElement(name = "dribble_tackles_pct", required = true, defaultValue = "0")
    protected BigDecimal dribbleTacklesPct;
    @XmlElement(name = "dribbled_past", required = true, defaultValue = "0")
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger dribbledPast;

    /**
     * Gets the value of the cardsYellowRed property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getCardsYellowRed() {
        return cardsYellowRed;
    }

    /**
     * Sets the value of the cardsYellowRed property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setCardsYellowRed(BigInteger value) {
        this.cardsYellowRed = value;
    }

    /**
     * Gets the value of the fouls property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFouls() {
        return fouls;
    }

    /**
     * Sets the value of the fouls property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFouls(BigInteger value) {
        this.fouls = value;
    }

    /**
     * Gets the value of the fouled property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFouled() {
        return fouled;
    }

    /**
     * Sets the value of the fouled property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFouled(BigInteger value) {
        this.fouled = value;
    }

    /**
     * Gets the value of the offsides property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getOffsides() {
        return offsides;
    }

    /**
     * Sets the value of the offsides property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setOffsides(BigInteger value) {
        this.offsides = value;
    }

    /**
     * Gets the value of the crosses property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getCrosses() {
        return crosses;
    }

    /**
     * Sets the value of the crosses property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setCrosses(BigInteger value) {
        this.crosses = value;
    }

    /**
     * Gets the value of the tacklesWon property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getTacklesWon() {
        return tacklesWon;
    }

    /**
     * Sets the value of the tacklesWon property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setTacklesWon(BigInteger value) {
        this.tacklesWon = value;
    }

    /**
     * Gets the value of the interceptions property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getInterceptions() {
        return interceptions;
    }

    /**
     * Sets the value of the interceptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setInterceptions(BigInteger value) {
        this.interceptions = value;
    }

    /**
     * Gets the value of the pensWon property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPensWon() {
        return pensWon;
    }

    /**
     * Sets the value of the pensWon property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPensWon(BigInteger value) {
        this.pensWon = value;
    }

    /**
     * Gets the value of the pensConceded property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPensConceded() {
        return pensConceded;
    }

    /**
     * Sets the value of the pensConceded property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPensConceded(BigInteger value) {
        this.pensConceded = value;
    }

    /**
     * Gets the value of the ownGoals property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getOwnGoals() {
        return ownGoals;
    }

    /**
     * Sets the value of the ownGoals property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setOwnGoals(BigInteger value) {
        this.ownGoals = value;
    }

    /**
     * Gets the value of the dribblesCompleted property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDribblesCompleted() {
        return dribblesCompleted;
    }

    /**
     * Sets the value of the dribblesCompleted property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDribblesCompleted(BigInteger value) {
        this.dribblesCompleted = value;
    }

    /**
     * Gets the value of the dribbles property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDribbles() {
        return dribbles;
    }

    /**
     * Sets the value of the dribbles property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDribbles(BigInteger value) {
        this.dribbles = value;
    }

    /**
     * Gets the value of the dribblesCompletedPct property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getDribblesCompletedPct() {
        return dribblesCompletedPct;
    }

    /**
     * Sets the value of the dribblesCompletedPct property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDribblesCompletedPct(BigDecimal value) {
        this.dribblesCompletedPct = value;
    }

    /**
     * Gets the value of the playersDribbledPast property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPlayersDribbledPast() {
        return playersDribbledPast;
    }

    /**
     * Sets the value of the playersDribbledPast property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setPlayersDribbledPast(BigInteger value) {
        this.playersDribbledPast = value;
    }

    /**
     * Gets the value of the nutmegs property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNutmegs() {
        return nutmegs;
    }

    /**
     * Sets the value of the nutmegs property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNutmegs(BigInteger value) {
        this.nutmegs = value;
    }

    /**
     * Gets the value of the dribbleTackles property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDribbleTackles() {
        return dribbleTackles;
    }

    /**
     * Sets the value of the dribbleTackles property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDribbleTackles(BigInteger value) {
        this.dribbleTackles = value;
    }

    /**
     * Gets the value of the dribblesVs property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDribblesVs() {
        return dribblesVs;
    }

    /**
     * Sets the value of the dribblesVs property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDribblesVs(BigInteger value) {
        this.dribblesVs = value;
    }

    /**
     * Gets the value of the dribbleTacklesPct property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getDribbleTacklesPct() {
        return dribbleTacklesPct;
    }

    /**
     * Sets the value of the dribbleTacklesPct property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setDribbleTacklesPct(BigDecimal value) {
        this.dribbleTacklesPct = value;
    }

    /**
     * Gets the value of the dribbledPast property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getDribbledPast() {
        return dribbledPast;
    }

    /**
     * Sets the value of the dribbledPast property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setDribbledPast(BigInteger value) {
        this.dribbledPast = value;
    }

}
